State 99 conflicts: 17 shift/reduce, 3 reduce/reduce
State 112 conflicts: 10 shift/reduce
State 118 conflicts: 17 shift/reduce, 3 reduce/reduce
State 139 conflicts: 14 shift/reduce
State 141 conflicts: 1 shift/reduce
State 143 conflicts: 14 shift/reduce
State 147 conflicts: 14 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: ID
    2                   | constant_expression
    3                   | STRING_CONST
    4                   | '(' expression ')'

    5 postfix_expression: primary_expression
    6                   | postfix_expression '[' expression ']'
    7                   | postfix_expression '(' argument_expression_list_opt ')'
    8                   | postfix_expression ARW_PTR ID

    9 argument_expression_list_opt: argument_expression_list
   10                             | /* empty */

   11 argument_expression_list: assignment_expression
   12                         | argument_expression_list ',' assignment_expression

   13 unary_expression: postfix_expression
   14                 | unary_operator unary_expression

   15 unary_operator: '&'
   16               | '*'
   17               | '+'
   18               | '-'
   19               | '!'

   20 multiplicative_expression: unary_expression
   21                          | multiplicative_expression '*' unary_expression
   22                          | multiplicative_expression '/' unary_expression
   23                          | multiplicative_expression '%' unary_expression

   24 additive_expression: multiplicative_expression
   25                    | additive_expression '+' multiplicative_expression
   26                    | additive_expression '-' multiplicative_expression

   27 relational_expression: additive_expression
   28                      | relational_expression '<' additive_expression
   29                      | relational_expression '>' additive_expression
   30                      | relational_expression LT_EQUAL additive_expression
   31                      | relational_expression GT_EQUAL additive_expression

   32 equality_expression: relational_expression
   33                    | equality_expression EQUAL relational_expression
   34                    | equality_expression NOT_EQUAL relational_expression

   35 logical_AND_expression: equality_expression
   36                       | logical_AND_expression LOGIC_AND equality_expression

   37 logical_OR_expression: logical_AND_expression
   38                      | logical_OR_expression LOGIC_OR logical_AND_expression

   39 conditional_expression: logical_OR_expression
   40                       | logical_OR_expression '?' expression ':' conditional_expression

   41 assignment_expression: conditional_expression
   42                      | unary_expression '=' assignment_expression

   43 expression: assignment_expression

   44 declaration: type_specifier init_declarator ';'

   45 init_declarator: declarator
   46                | declarator '=' initializer

   47 type_specifier: /* empty */
   48               | KEYWRD_VOID
   49               | KEYWRD_INT
   50               | KEYWRD_CHAR

   51 declarator: pointer_opt direct_declarator

   52 direct_declarator: ID
   53                  | ID '[' INT_CONST ']'
   54                  | ID '[' parameter_list ']'

   55 pointer_opt: pointer
   56            | /* empty */

   57 pointer: '*'

   58 parameter_list: parameter_declaration
   59               | parameter_list ',' parameter_declaration

   60 parameter_declaration: type_specifier pointer_opt id_opt

   61 id_opt: ID ';'
   62       | /* empty */

   63 initializer: assignment_expression

   64 statement: expression_statement
   65          | compound_statement
   66          | selection_statement
   67          | iteration_statement
   68          | jump_statement

   69 compound_statement: '{' block_item_list_opt '}'

   70 block_item_list_opt: block_item_list
   71                    | /* empty */

   72 block_item_list: block_item
   73                | block_item_list block_item

   74 block_item: declaration
   75           | statement

   76 expression_statement: expression_opt

   77 expression_opt: expression ';'
   78               | /* empty */

   79 selection_statement: KEYWRD_IF '(' expression ')' statement
   80                    | KEYWRD_IF '(' expression ')' statement KEYWRD_ELSE statement

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

   82 jump_statement: KEYWRD_RETURN expression_opt

   83 translation_unit: function_definition
   84                 | declaration

   85 function_definition: type_specifier declarator '(' declaration_list_opt ')' compound_statement

   86 declaration_list_opt: declaration_list ';'
   87                     | /* empty */

   88 declaration_list: declaration
   89                 | declaration_list declaration ';'

   90 constant_expression: INT_CONST
   91                    | CONST


Terminals, with rules where they appear

$end (0) 0
'!' (33) 19
'%' (37) 23
'&' (38) 15
'(' (40) 4 7 79 80 81 85
')' (41) 4 7 79 80 81 85
'*' (42) 16 21 57
'+' (43) 17 25
',' (44) 12 59
'-' (45) 18 26
'/' (47) 22
':' (58) 40
';' (59) 44 61 77 81 86 89
'<' (60) 28
'=' (61) 42 46
'>' (62) 29
'?' (63) 40
'[' (91) 6 53 54
']' (93) 6 53 54
'{' (123) 69
'}' (125) 69
error (256)
KEYWRD_VOID (258) 48
KEYWRD_INT (259) 49
KEYWRD_CHAR (260) 50
KEYWRD_IF (261) 79 80
KEYWRD_ELSE (262) 80
KEYWRD_FOR (263) 81
KEYWRD_RETURN (264) 82
INT_CONST (265) 53 90
STRING_CONST (266) 3
CONST (267) 91
ID (268) 1 8 52 53 54 61
LT_EQUAL (269) 30
GT_EQUAL (270) 31
EQUAL (271) 33
NOT_EQUAL (272) 34
LOGIC_AND (273) 36
LOGIC_OR (274) 38
ARW_PTR (275) 8


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
primary_expression (42)
    on left: 1 2 3 4, on right: 5
postfix_expression (43)
    on left: 5 6 7 8, on right: 6 7 8 13
argument_expression_list_opt (44)
    on left: 9 10, on right: 7
argument_expression_list (45)
    on left: 11 12, on right: 9 12
unary_expression (46)
    on left: 13 14, on right: 14 20 21 22 23 42
unary_operator (47)
    on left: 15 16 17 18 19, on right: 14
multiplicative_expression (48)
    on left: 20 21 22 23, on right: 21 22 23 24 25 26
additive_expression (49)
    on left: 24 25 26, on right: 25 26 27 28 29 30 31
relational_expression (50)
    on left: 27 28 29 30 31, on right: 28 29 30 31 32 33 34
equality_expression (51)
    on left: 32 33 34, on right: 33 34 35 36
logical_AND_expression (52)
    on left: 35 36, on right: 36 37 38
logical_OR_expression (53)
    on left: 37 38, on right: 38 39 40
conditional_expression (54)
    on left: 39 40, on right: 40 41
assignment_expression (55)
    on left: 41 42, on right: 11 12 42 43 63
expression (56)
    on left: 43, on right: 4 6 40 77 79 80
declaration (57)
    on left: 44, on right: 74 84 88 89
init_declarator (58)
    on left: 45 46, on right: 44
type_specifier (59)
    on left: 47 48 49 50, on right: 44 60 85
declarator (60)
    on left: 51, on right: 45 46 85
direct_declarator (61)
    on left: 52 53 54, on right: 51
pointer_opt (62)
    on left: 55 56, on right: 51 60
pointer (63)
    on left: 57, on right: 55
parameter_list (64)
    on left: 58 59, on right: 54 59
parameter_declaration (65)
    on left: 60, on right: 58 59
id_opt (66)
    on left: 61 62, on right: 60
initializer (67)
    on left: 63, on right: 46
statement (68)
    on left: 64 65 66 67 68, on right: 75 79 80 81
compound_statement (69)
    on left: 69, on right: 65 85
block_item_list_opt (70)
    on left: 70 71, on right: 69
block_item_list (71)
    on left: 72 73, on right: 70 73
block_item (72)
    on left: 74 75, on right: 72 73
expression_statement (73)
    on left: 76, on right: 64
expression_opt (74)
    on left: 77 78, on right: 76 81 82
selection_statement (75)
    on left: 79 80, on right: 66
iteration_statement (76)
    on left: 81, on right: 67
jump_statement (77)
    on left: 82, on right: 68
translation_unit (78)
    on left: 83 84, on right: 0
function_definition (79)
    on left: 85, on right: 83
declaration_list_opt (80)
    on left: 86 87, on right: 85
declaration_list (81)
    on left: 88 89, on right: 86 89
constant_expression (82)
    on left: 90 91, on right: 2


state 0

    0 $accept: . translation_unit $end

    KEYWRD_VOID  shift, and go to state 1
    KEYWRD_INT   shift, and go to state 2
    KEYWRD_CHAR  shift, and go to state 3

    $default  reduce using rule 47 (type_specifier)

    declaration          go to state 4
    type_specifier       go to state 5
    translation_unit     go to state 6
    function_definition  go to state 7


state 1

   48 type_specifier: KEYWRD_VOID .

    $default  reduce using rule 48 (type_specifier)


state 2

   49 type_specifier: KEYWRD_INT .

    $default  reduce using rule 49 (type_specifier)


state 3

   50 type_specifier: KEYWRD_CHAR .

    $default  reduce using rule 50 (type_specifier)


state 4

   84 translation_unit: declaration .

    $default  reduce using rule 84 (translation_unit)


state 5

   44 declaration: type_specifier . init_declarator ';'
   85 function_definition: type_specifier . declarator '(' declaration_list_opt ')' compound_statement

    '*'  shift, and go to state 8

    $default  reduce using rule 56 (pointer_opt)

    init_declarator  go to state 9
    declarator       go to state 10
    pointer_opt      go to state 11
    pointer          go to state 12


state 6

    0 $accept: translation_unit . $end

    $end  shift, and go to state 13


state 7

   83 translation_unit: function_definition .

    $default  reduce using rule 83 (translation_unit)


state 8

   57 pointer: '*' .

    $default  reduce using rule 57 (pointer)


state 9

   44 declaration: type_specifier init_declarator . ';'

    ';'  shift, and go to state 14


state 10

   45 init_declarator: declarator .
   46                | declarator . '=' initializer
   85 function_definition: type_specifier declarator . '(' declaration_list_opt ')' compound_statement

    '='  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 45 (init_declarator)


state 11

   51 declarator: pointer_opt . direct_declarator

    ID  shift, and go to state 17

    direct_declarator  go to state 18


state 12

   55 pointer_opt: pointer .

    $default  reduce using rule 55 (pointer_opt)


state 13

    0 $accept: translation_unit $end .

    $default  accept


state 14

   44 declaration: type_specifier init_declarator ';' .

    $default  reduce using rule 44 (declaration)


state 15

   46 init_declarator: declarator '=' . initializer

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 40
    initializer                go to state 41
    constant_expression        go to state 42


state 16

   85 function_definition: type_specifier declarator '(' . declaration_list_opt ')' compound_statement

    KEYWRD_VOID  shift, and go to state 1
    KEYWRD_INT   shift, and go to state 2
    KEYWRD_CHAR  shift, and go to state 3

    ')'       reduce using rule 87 (declaration_list_opt)
    $default  reduce using rule 47 (type_specifier)

    declaration           go to state 43
    type_specifier        go to state 44
    declaration_list_opt  go to state 45
    declaration_list      go to state 46


state 17

   52 direct_declarator: ID .
   53                  | ID . '[' INT_CONST ']'
   54                  | ID . '[' parameter_list ']'

    '['  shift, and go to state 47

    $default  reduce using rule 52 (direct_declarator)


state 18

   51 declarator: pointer_opt direct_declarator .

    $default  reduce using rule 51 (declarator)


state 19

   90 constant_expression: INT_CONST .

    $default  reduce using rule 90 (constant_expression)


state 20

    3 primary_expression: STRING_CONST .

    $default  reduce using rule 3 (primary_expression)


state 21

   91 constant_expression: CONST .

    $default  reduce using rule 91 (constant_expression)


state 22

    1 primary_expression: ID .

    $default  reduce using rule 1 (primary_expression)


state 23

   17 unary_operator: '+' .

    $default  reduce using rule 17 (unary_operator)


state 24

   18 unary_operator: '-' .

    $default  reduce using rule 18 (unary_operator)


state 25

   16 unary_operator: '*' .

    $default  reduce using rule 16 (unary_operator)


state 26

    4 primary_expression: '(' . expression ')'

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 49
    constant_expression        go to state 42


state 27

   15 unary_operator: '&' .

    $default  reduce using rule 15 (unary_operator)


state 28

   19 unary_operator: '!' .

    $default  reduce using rule 19 (unary_operator)


state 29

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


state 30

    6 postfix_expression: postfix_expression . '[' expression ']'
    7                   | postfix_expression . '(' argument_expression_list_opt ')'
    8                   | postfix_expression . ARW_PTR ID
   13 unary_expression: postfix_expression .

    ARW_PTR  shift, and go to state 50
    '('      shift, and go to state 51
    '['      shift, and go to state 52

    $default  reduce using rule 13 (unary_expression)


state 31

   20 multiplicative_expression: unary_expression .
   42 assignment_expression: unary_expression . '=' assignment_expression

    '='  shift, and go to state 53

    $default  reduce using rule 20 (multiplicative_expression)


state 32

   14 unary_expression: unary_operator . unary_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression   go to state 29
    postfix_expression   go to state 30
    unary_expression     go to state 54
    unary_operator       go to state 32
    constant_expression  go to state 42


state 33

   21 multiplicative_expression: multiplicative_expression . '*' unary_expression
   22                          | multiplicative_expression . '/' unary_expression
   23                          | multiplicative_expression . '%' unary_expression
   24 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 24 (additive_expression)


state 34

   25 additive_expression: additive_expression . '+' multiplicative_expression
   26                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 27 (relational_expression)


state 35

   28 relational_expression: relational_expression . '<' additive_expression
   29                      | relational_expression . '>' additive_expression
   30                      | relational_expression . LT_EQUAL additive_expression
   31                      | relational_expression . GT_EQUAL additive_expression
   32 equality_expression: relational_expression .

    LT_EQUAL  shift, and go to state 60
    GT_EQUAL  shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63

    $default  reduce using rule 32 (equality_expression)


state 36

   33 equality_expression: equality_expression . EQUAL relational_expression
   34                    | equality_expression . NOT_EQUAL relational_expression
   35 logical_AND_expression: equality_expression .

    EQUAL      shift, and go to state 64
    NOT_EQUAL  shift, and go to state 65

    $default  reduce using rule 35 (logical_AND_expression)


state 37

   36 logical_AND_expression: logical_AND_expression . LOGIC_AND equality_expression
   37 logical_OR_expression: logical_AND_expression .

    LOGIC_AND  shift, and go to state 66

    $default  reduce using rule 37 (logical_OR_expression)


state 38

   38 logical_OR_expression: logical_OR_expression . LOGIC_OR logical_AND_expression
   39 conditional_expression: logical_OR_expression .
   40                       | logical_OR_expression . '?' expression ':' conditional_expression

    LOGIC_OR  shift, and go to state 67
    '?'       shift, and go to state 68

    $default  reduce using rule 39 (conditional_expression)


state 39

   41 assignment_expression: conditional_expression .

    $default  reduce using rule 41 (assignment_expression)


state 40

   63 initializer: assignment_expression .

    $default  reduce using rule 63 (initializer)


state 41

   46 init_declarator: declarator '=' initializer .

    $default  reduce using rule 46 (init_declarator)


state 42

    2 primary_expression: constant_expression .

    $default  reduce using rule 2 (primary_expression)


state 43

   88 declaration_list: declaration .

    $default  reduce using rule 88 (declaration_list)


state 44

   44 declaration: type_specifier . init_declarator ';'

    '*'  shift, and go to state 8

    $default  reduce using rule 56 (pointer_opt)

    init_declarator  go to state 9
    declarator       go to state 69
    pointer_opt      go to state 11
    pointer          go to state 12


state 45

   85 function_definition: type_specifier declarator '(' declaration_list_opt . ')' compound_statement

    ')'  shift, and go to state 70


state 46

   86 declaration_list_opt: declaration_list . ';'
   89 declaration_list: declaration_list . declaration ';'

    KEYWRD_VOID  shift, and go to state 1
    KEYWRD_INT   shift, and go to state 2
    KEYWRD_CHAR  shift, and go to state 3
    ';'          shift, and go to state 71

    $default  reduce using rule 47 (type_specifier)

    declaration     go to state 72
    type_specifier  go to state 44


state 47

   53 direct_declarator: ID '[' . INT_CONST ']'
   54                  | ID '[' . parameter_list ']'

    KEYWRD_VOID  shift, and go to state 1
    KEYWRD_INT   shift, and go to state 2
    KEYWRD_CHAR  shift, and go to state 3
    INT_CONST    shift, and go to state 73

    $default  reduce using rule 47 (type_specifier)

    type_specifier         go to state 74
    parameter_list         go to state 75
    parameter_declaration  go to state 76


state 48

   43 expression: assignment_expression .

    $default  reduce using rule 43 (expression)


state 49

    4 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 77


state 50

    8 postfix_expression: postfix_expression ARW_PTR . ID

    ID  shift, and go to state 78


state 51

    7 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    $default  reduce using rule 10 (argument_expression_list_opt)

    primary_expression            go to state 29
    postfix_expression            go to state 30
    argument_expression_list_opt  go to state 79
    argument_expression_list      go to state 80
    unary_expression              go to state 31
    unary_operator                go to state 32
    multiplicative_expression     go to state 33
    additive_expression           go to state 34
    relational_expression         go to state 35
    equality_expression           go to state 36
    logical_AND_expression        go to state 37
    logical_OR_expression         go to state 38
    conditional_expression        go to state 39
    assignment_expression         go to state 81
    constant_expression           go to state 42


state 52

    6 postfix_expression: postfix_expression '[' . expression ']'

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 82
    constant_expression        go to state 42


state 53

   42 assignment_expression: unary_expression '=' . assignment_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 83
    constant_expression        go to state 42


state 54

   14 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 14 (unary_expression)


state 55

   21 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression   go to state 29
    postfix_expression   go to state 30
    unary_expression     go to state 84
    unary_operator       go to state 32
    constant_expression  go to state 42


state 56

   22 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression   go to state 29
    postfix_expression   go to state 30
    unary_expression     go to state 85
    unary_operator       go to state 32
    constant_expression  go to state 42


state 57

   23 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression   go to state 29
    postfix_expression   go to state 30
    unary_expression     go to state 86
    unary_operator       go to state 32
    constant_expression  go to state 42


state 58

   25 additive_expression: additive_expression '+' . multiplicative_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 88
    constant_expression        go to state 42


state 59

   26 additive_expression: additive_expression '-' . multiplicative_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 89
    constant_expression        go to state 42


state 60

   30 relational_expression: relational_expression LT_EQUAL . additive_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 90
    constant_expression        go to state 42


state 61

   31 relational_expression: relational_expression GT_EQUAL . additive_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 91
    constant_expression        go to state 42


state 62

   28 relational_expression: relational_expression '<' . additive_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 92
    constant_expression        go to state 42


state 63

   29 relational_expression: relational_expression '>' . additive_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 93
    constant_expression        go to state 42


state 64

   33 equality_expression: equality_expression EQUAL . relational_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 94
    constant_expression        go to state 42


state 65

   34 equality_expression: equality_expression NOT_EQUAL . relational_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 95
    constant_expression        go to state 42


state 66

   36 logical_AND_expression: logical_AND_expression LOGIC_AND . equality_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 96
    constant_expression        go to state 42


state 67

   38 logical_OR_expression: logical_OR_expression LOGIC_OR . logical_AND_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 97
    constant_expression        go to state 42


state 68

   40 conditional_expression: logical_OR_expression '?' . expression ':' conditional_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 98
    constant_expression        go to state 42


state 69

   45 init_declarator: declarator .
   46                | declarator . '=' initializer

    '='  shift, and go to state 15

    $default  reduce using rule 45 (init_declarator)


state 70

   85 function_definition: type_specifier declarator '(' declaration_list_opt ')' . compound_statement

    '{'  shift, and go to state 99

    compound_statement  go to state 100


state 71

   86 declaration_list_opt: declaration_list ';' .

    $default  reduce using rule 86 (declaration_list_opt)


state 72

   89 declaration_list: declaration_list declaration . ';'

    ';'  shift, and go to state 101


state 73

   53 direct_declarator: ID '[' INT_CONST . ']'

    ']'  shift, and go to state 102


state 74

   60 parameter_declaration: type_specifier . pointer_opt id_opt

    '*'  shift, and go to state 8

    $default  reduce using rule 56 (pointer_opt)

    pointer_opt  go to state 103
    pointer      go to state 12


state 75

   54 direct_declarator: ID '[' parameter_list . ']'
   59 parameter_list: parameter_list . ',' parameter_declaration

    ']'  shift, and go to state 104
    ','  shift, and go to state 105


state 76

   58 parameter_list: parameter_declaration .

    $default  reduce using rule 58 (parameter_list)


state 77

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


state 78

    8 postfix_expression: postfix_expression ARW_PTR ID .

    $default  reduce using rule 8 (postfix_expression)


state 79

    7 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 106


state 80

    9 argument_expression_list_opt: argument_expression_list .
   12 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 107

    $default  reduce using rule 9 (argument_expression_list_opt)


state 81

   11 argument_expression_list: assignment_expression .

    $default  reduce using rule 11 (argument_expression_list)


state 82

    6 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 108


state 83

   42 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 42 (assignment_expression)


state 84

   21 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 21 (multiplicative_expression)


state 85

   22 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 22 (multiplicative_expression)


state 86

   23 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


state 87

   20 multiplicative_expression: unary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


state 88

   21 multiplicative_expression: multiplicative_expression . '*' unary_expression
   22                          | multiplicative_expression . '/' unary_expression
   23                          | multiplicative_expression . '%' unary_expression
   25 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 25 (additive_expression)


state 89

   21 multiplicative_expression: multiplicative_expression . '*' unary_expression
   22                          | multiplicative_expression . '/' unary_expression
   23                          | multiplicative_expression . '%' unary_expression
   26 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 26 (additive_expression)


state 90

   25 additive_expression: additive_expression . '+' multiplicative_expression
   26                    | additive_expression . '-' multiplicative_expression
   30 relational_expression: relational_expression LT_EQUAL additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 30 (relational_expression)


state 91

   25 additive_expression: additive_expression . '+' multiplicative_expression
   26                    | additive_expression . '-' multiplicative_expression
   31 relational_expression: relational_expression GT_EQUAL additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 31 (relational_expression)


state 92

   25 additive_expression: additive_expression . '+' multiplicative_expression
   26                    | additive_expression . '-' multiplicative_expression
   28 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 28 (relational_expression)


state 93

   25 additive_expression: additive_expression . '+' multiplicative_expression
   26                    | additive_expression . '-' multiplicative_expression
   29 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 29 (relational_expression)


state 94

   28 relational_expression: relational_expression . '<' additive_expression
   29                      | relational_expression . '>' additive_expression
   30                      | relational_expression . LT_EQUAL additive_expression
   31                      | relational_expression . GT_EQUAL additive_expression
   33 equality_expression: equality_expression EQUAL relational_expression .

    LT_EQUAL  shift, and go to state 60
    GT_EQUAL  shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63

    $default  reduce using rule 33 (equality_expression)


state 95

   28 relational_expression: relational_expression . '<' additive_expression
   29                      | relational_expression . '>' additive_expression
   30                      | relational_expression . LT_EQUAL additive_expression
   31                      | relational_expression . GT_EQUAL additive_expression
   34 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LT_EQUAL  shift, and go to state 60
    GT_EQUAL  shift, and go to state 61
    '<'       shift, and go to state 62
    '>'       shift, and go to state 63

    $default  reduce using rule 34 (equality_expression)


state 96

   33 equality_expression: equality_expression . EQUAL relational_expression
   34                    | equality_expression . NOT_EQUAL relational_expression
   36 logical_AND_expression: logical_AND_expression LOGIC_AND equality_expression .

    EQUAL      shift, and go to state 64
    NOT_EQUAL  shift, and go to state 65

    $default  reduce using rule 36 (logical_AND_expression)


state 97

   36 logical_AND_expression: logical_AND_expression . LOGIC_AND equality_expression
   38 logical_OR_expression: logical_OR_expression LOGIC_OR logical_AND_expression .

    LOGIC_AND  shift, and go to state 66

    $default  reduce using rule 38 (logical_OR_expression)


state 98

   40 conditional_expression: logical_OR_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 109


state 99

   69 compound_statement: '{' . block_item_list_opt '}'

    KEYWRD_VOID    shift, and go to state 1
    KEYWRD_INT     shift, and go to state 2
    KEYWRD_CHAR    shift, and go to state 3
    KEYWRD_IF      shift, and go to state 110
    KEYWRD_FOR     shift, and go to state 111
    KEYWRD_RETURN  shift, and go to state 112
    INT_CONST      shift, and go to state 19
    STRING_CONST   shift, and go to state 20
    CONST          shift, and go to state 21
    ID             shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '*'            shift, and go to state 25
    '('            shift, and go to state 26
    '&'            shift, and go to state 27
    '!'            shift, and go to state 28
    '{'            shift, and go to state 99

    KEYWRD_VOID    [reduce using rule 78 (expression_opt)]
    KEYWRD_INT     [reduce using rule 78 (expression_opt)]
    KEYWRD_CHAR    [reduce using rule 78 (expression_opt)]
    KEYWRD_IF      [reduce using rule 78 (expression_opt)]
    KEYWRD_FOR     [reduce using rule 78 (expression_opt)]
    KEYWRD_RETURN  [reduce using rule 78 (expression_opt)]
    INT_CONST      [reduce using rule 78 (expression_opt)]
    STRING_CONST   [reduce using rule 78 (expression_opt)]
    CONST          [reduce using rule 78 (expression_opt)]
    ID             [reduce using rule 47 (type_specifier)]
    ID             [reduce using rule 78 (expression_opt)]
    '+'            [reduce using rule 78 (expression_opt)]
    '-'            [reduce using rule 78 (expression_opt)]
    '*'            [reduce using rule 47 (type_specifier)]
    '*'            [reduce using rule 78 (expression_opt)]
    '('            [reduce using rule 78 (expression_opt)]
    '&'            [reduce using rule 78 (expression_opt)]
    '!'            [reduce using rule 78 (expression_opt)]
    '{'            [reduce using rule 78 (expression_opt)]
    '}'            reduce using rule 71 (block_item_list_opt)
    '}'            [reduce using rule 78 (expression_opt)]
    $default       reduce using rule 71 (block_item_list_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    declaration                go to state 114
    type_specifier             go to state 44
    statement                  go to state 115
    compound_statement         go to state 116
    block_item_list_opt        go to state 117
    block_item_list            go to state 118
    block_item                 go to state 119
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124
    constant_expression        go to state 42


state 100

   85 function_definition: type_specifier declarator '(' declaration_list_opt ')' compound_statement .

    $default  reduce using rule 85 (function_definition)


state 101

   89 declaration_list: declaration_list declaration ';' .

    $default  reduce using rule 89 (declaration_list)


state 102

   53 direct_declarator: ID '[' INT_CONST ']' .

    $default  reduce using rule 53 (direct_declarator)


state 103

   60 parameter_declaration: type_specifier pointer_opt . id_opt

    ID  shift, and go to state 125

    $default  reduce using rule 62 (id_opt)

    id_opt  go to state 126


state 104

   54 direct_declarator: ID '[' parameter_list ']' .

    $default  reduce using rule 54 (direct_declarator)


state 105

   59 parameter_list: parameter_list ',' . parameter_declaration

    KEYWRD_VOID  shift, and go to state 1
    KEYWRD_INT   shift, and go to state 2
    KEYWRD_CHAR  shift, and go to state 3

    $default  reduce using rule 47 (type_specifier)

    type_specifier         go to state 74
    parameter_declaration  go to state 127


state 106

    7 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 7 (postfix_expression)


state 107

   12 argument_expression_list: argument_expression_list ',' . assignment_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 128
    constant_expression        go to state 42


state 108

    6 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 6 (postfix_expression)


state 109

   40 conditional_expression: logical_OR_expression '?' expression ':' . conditional_expression

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 87
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 129
    constant_expression        go to state 42


state 110

   79 selection_statement: KEYWRD_IF . '(' expression ')' statement
   80                    | KEYWRD_IF . '(' expression ')' statement KEYWRD_ELSE statement

    '('  shift, and go to state 130


state 111

   81 iteration_statement: KEYWRD_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 131


state 112

   82 jump_statement: KEYWRD_RETURN . expression_opt

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    INT_CONST     [reduce using rule 78 (expression_opt)]
    STRING_CONST  [reduce using rule 78 (expression_opt)]
    CONST         [reduce using rule 78 (expression_opt)]
    ID            [reduce using rule 78 (expression_opt)]
    '+'           [reduce using rule 78 (expression_opt)]
    '-'           [reduce using rule 78 (expression_opt)]
    '*'           [reduce using rule 78 (expression_opt)]
    '('           [reduce using rule 78 (expression_opt)]
    '&'           [reduce using rule 78 (expression_opt)]
    '!'           [reduce using rule 78 (expression_opt)]
    $default      reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    expression_opt             go to state 132
    constant_expression        go to state 42


state 113

   77 expression_opt: expression . ';'

    ';'  shift, and go to state 133


state 114

   74 block_item: declaration .

    $default  reduce using rule 74 (block_item)


state 115

   75 block_item: statement .

    $default  reduce using rule 75 (block_item)


state 116

   65 statement: compound_statement .

    $default  reduce using rule 65 (statement)


state 117

   69 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 134


state 118

   70 block_item_list_opt: block_item_list .
   73 block_item_list: block_item_list . block_item

    KEYWRD_VOID    shift, and go to state 1
    KEYWRD_INT     shift, and go to state 2
    KEYWRD_CHAR    shift, and go to state 3
    KEYWRD_IF      shift, and go to state 110
    KEYWRD_FOR     shift, and go to state 111
    KEYWRD_RETURN  shift, and go to state 112
    INT_CONST      shift, and go to state 19
    STRING_CONST   shift, and go to state 20
    CONST          shift, and go to state 21
    ID             shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '*'            shift, and go to state 25
    '('            shift, and go to state 26
    '&'            shift, and go to state 27
    '!'            shift, and go to state 28
    '{'            shift, and go to state 99

    KEYWRD_VOID    [reduce using rule 78 (expression_opt)]
    KEYWRD_INT     [reduce using rule 78 (expression_opt)]
    KEYWRD_CHAR    [reduce using rule 78 (expression_opt)]
    KEYWRD_IF      [reduce using rule 78 (expression_opt)]
    KEYWRD_FOR     [reduce using rule 78 (expression_opt)]
    KEYWRD_RETURN  [reduce using rule 78 (expression_opt)]
    INT_CONST      [reduce using rule 78 (expression_opt)]
    STRING_CONST   [reduce using rule 78 (expression_opt)]
    CONST          [reduce using rule 78 (expression_opt)]
    ID             [reduce using rule 47 (type_specifier)]
    ID             [reduce using rule 78 (expression_opt)]
    '+'            [reduce using rule 78 (expression_opt)]
    '-'            [reduce using rule 78 (expression_opt)]
    '*'            [reduce using rule 47 (type_specifier)]
    '*'            [reduce using rule 78 (expression_opt)]
    '('            [reduce using rule 78 (expression_opt)]
    '&'            [reduce using rule 78 (expression_opt)]
    '!'            [reduce using rule 78 (expression_opt)]
    '{'            [reduce using rule 78 (expression_opt)]
    '}'            reduce using rule 70 (block_item_list_opt)
    '}'            [reduce using rule 78 (expression_opt)]
    $default       reduce using rule 70 (block_item_list_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    declaration                go to state 114
    type_specifier             go to state 44
    statement                  go to state 115
    compound_statement         go to state 116
    block_item                 go to state 135
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124
    constant_expression        go to state 42


state 119

   72 block_item_list: block_item .

    $default  reduce using rule 72 (block_item_list)


state 120

   64 statement: expression_statement .

    $default  reduce using rule 64 (statement)


state 121

   76 expression_statement: expression_opt .

    $default  reduce using rule 76 (expression_statement)


state 122

   66 statement: selection_statement .

    $default  reduce using rule 66 (statement)


state 123

   67 statement: iteration_statement .

    $default  reduce using rule 67 (statement)


state 124

   68 statement: jump_statement .

    $default  reduce using rule 68 (statement)


state 125

   61 id_opt: ID . ';'

    ';'  shift, and go to state 136


state 126

   60 parameter_declaration: type_specifier pointer_opt id_opt .

    $default  reduce using rule 60 (parameter_declaration)


state 127

   59 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 59 (parameter_list)


state 128

   12 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 12 (argument_expression_list)


state 129

   40 conditional_expression: logical_OR_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 40 (conditional_expression)


state 130

   79 selection_statement: KEYWRD_IF '(' . expression ')' statement
   80                    | KEYWRD_IF '(' . expression ')' statement KEYWRD_ELSE statement

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 137
    constant_expression        go to state 42


state 131

   81 iteration_statement: KEYWRD_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    $default  reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    expression_opt             go to state 138
    constant_expression        go to state 42


state 132

   82 jump_statement: KEYWRD_RETURN expression_opt .

    $default  reduce using rule 82 (jump_statement)


state 133

   77 expression_opt: expression ';' .

    $default  reduce using rule 77 (expression_opt)


state 134

   69 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 69 (compound_statement)


state 135

   73 block_item_list: block_item_list block_item .

    $default  reduce using rule 73 (block_item_list)


state 136

   61 id_opt: ID ';' .

    $default  reduce using rule 61 (id_opt)


state 137

   79 selection_statement: KEYWRD_IF '(' expression . ')' statement
   80                    | KEYWRD_IF '(' expression . ')' statement KEYWRD_ELSE statement

    ')'  shift, and go to state 139


state 138

   81 iteration_statement: KEYWRD_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 140


state 139

   79 selection_statement: KEYWRD_IF '(' expression ')' . statement
   80                    | KEYWRD_IF '(' expression ')' . statement KEYWRD_ELSE statement

    KEYWRD_IF      shift, and go to state 110
    KEYWRD_FOR     shift, and go to state 111
    KEYWRD_RETURN  shift, and go to state 112
    INT_CONST      shift, and go to state 19
    STRING_CONST   shift, and go to state 20
    CONST          shift, and go to state 21
    ID             shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '*'            shift, and go to state 25
    '('            shift, and go to state 26
    '&'            shift, and go to state 27
    '!'            shift, and go to state 28
    '{'            shift, and go to state 99

    KEYWRD_IF      [reduce using rule 78 (expression_opt)]
    KEYWRD_FOR     [reduce using rule 78 (expression_opt)]
    KEYWRD_RETURN  [reduce using rule 78 (expression_opt)]
    INT_CONST      [reduce using rule 78 (expression_opt)]
    STRING_CONST   [reduce using rule 78 (expression_opt)]
    CONST          [reduce using rule 78 (expression_opt)]
    ID             [reduce using rule 78 (expression_opt)]
    '+'            [reduce using rule 78 (expression_opt)]
    '-'            [reduce using rule 78 (expression_opt)]
    '*'            [reduce using rule 78 (expression_opt)]
    '('            [reduce using rule 78 (expression_opt)]
    '&'            [reduce using rule 78 (expression_opt)]
    '!'            [reduce using rule 78 (expression_opt)]
    '{'            [reduce using rule 78 (expression_opt)]
    $default       reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    statement                  go to state 141
    compound_statement         go to state 116
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124
    constant_expression        go to state 42


state 140

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    $default  reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    expression_opt             go to state 142
    constant_expression        go to state 42


state 141

   79 selection_statement: KEYWRD_IF '(' expression ')' statement .
   80                    | KEYWRD_IF '(' expression ')' statement . KEYWRD_ELSE statement

    KEYWRD_ELSE  shift, and go to state 143

    KEYWRD_ELSE  [reduce using rule 79 (selection_statement)]
    $default     reduce using rule 79 (selection_statement)


state 142

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 144


state 143

   80 selection_statement: KEYWRD_IF '(' expression ')' statement KEYWRD_ELSE . statement

    KEYWRD_IF      shift, and go to state 110
    KEYWRD_FOR     shift, and go to state 111
    KEYWRD_RETURN  shift, and go to state 112
    INT_CONST      shift, and go to state 19
    STRING_CONST   shift, and go to state 20
    CONST          shift, and go to state 21
    ID             shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '*'            shift, and go to state 25
    '('            shift, and go to state 26
    '&'            shift, and go to state 27
    '!'            shift, and go to state 28
    '{'            shift, and go to state 99

    KEYWRD_IF      [reduce using rule 78 (expression_opt)]
    KEYWRD_FOR     [reduce using rule 78 (expression_opt)]
    KEYWRD_RETURN  [reduce using rule 78 (expression_opt)]
    INT_CONST      [reduce using rule 78 (expression_opt)]
    STRING_CONST   [reduce using rule 78 (expression_opt)]
    CONST          [reduce using rule 78 (expression_opt)]
    ID             [reduce using rule 78 (expression_opt)]
    '+'            [reduce using rule 78 (expression_opt)]
    '-'            [reduce using rule 78 (expression_opt)]
    '*'            [reduce using rule 78 (expression_opt)]
    '('            [reduce using rule 78 (expression_opt)]
    '&'            [reduce using rule 78 (expression_opt)]
    '!'            [reduce using rule 78 (expression_opt)]
    '{'            [reduce using rule 78 (expression_opt)]
    $default       reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    statement                  go to state 145
    compound_statement         go to state 116
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124
    constant_expression        go to state 42


state 144

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    INT_CONST     shift, and go to state 19
    STRING_CONST  shift, and go to state 20
    CONST         shift, and go to state 21
    ID            shift, and go to state 22
    '+'           shift, and go to state 23
    '-'           shift, and go to state 24
    '*'           shift, and go to state 25
    '('           shift, and go to state 26
    '&'           shift, and go to state 27
    '!'           shift, and go to state 28

    $default  reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    expression_opt             go to state 146
    constant_expression        go to state 42


state 145

   80 selection_statement: KEYWRD_IF '(' expression ')' statement KEYWRD_ELSE statement .

    $default  reduce using rule 80 (selection_statement)


state 146

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 147


state 147

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    KEYWRD_IF      shift, and go to state 110
    KEYWRD_FOR     shift, and go to state 111
    KEYWRD_RETURN  shift, and go to state 112
    INT_CONST      shift, and go to state 19
    STRING_CONST   shift, and go to state 20
    CONST          shift, and go to state 21
    ID             shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '*'            shift, and go to state 25
    '('            shift, and go to state 26
    '&'            shift, and go to state 27
    '!'            shift, and go to state 28
    '{'            shift, and go to state 99

    KEYWRD_IF      [reduce using rule 78 (expression_opt)]
    KEYWRD_FOR     [reduce using rule 78 (expression_opt)]
    KEYWRD_RETURN  [reduce using rule 78 (expression_opt)]
    INT_CONST      [reduce using rule 78 (expression_opt)]
    STRING_CONST   [reduce using rule 78 (expression_opt)]
    CONST          [reduce using rule 78 (expression_opt)]
    ID             [reduce using rule 78 (expression_opt)]
    '+'            [reduce using rule 78 (expression_opt)]
    '-'            [reduce using rule 78 (expression_opt)]
    '*'            [reduce using rule 78 (expression_opt)]
    '('            [reduce using rule 78 (expression_opt)]
    '&'            [reduce using rule 78 (expression_opt)]
    '!'            [reduce using rule 78 (expression_opt)]
    '{'            [reduce using rule 78 (expression_opt)]
    $default       reduce using rule 78 (expression_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_expression           go to state 31
    unary_operator             go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 48
    expression                 go to state 113
    statement                  go to state 148
    compound_statement         go to state 116
    expression_statement       go to state 120
    expression_opt             go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124
    constant_expression        go to state 42


state 148

   81 iteration_statement: KEYWRD_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 81 (iteration_statement)
